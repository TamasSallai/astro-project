---
import { Image } from 'astro:assets'
import { getRelativeLocaleUrl } from 'astro:i18n'
import { useTranslations, type LangKey } from '@i18n/utils'
import { getCollectionByLang } from '@utils/getCollectionByLang'
import LanguageSelect from './ui/LanguageSelect.astro'
import ThemeSelect from './ui/ThemeSelect.astro'
import NavToggle from './ui/NavToggle.astro'
import NavItem from './ui/NavItem.astro'
import LogoDark from '@assets/logo-darkmode.svg'
import LogoLight from '@assets/logo-lightmode.svg'

const lang = Astro.currentLocale as LangKey
const t = useTranslations(lang)

const projects = await getCollectionByLang('projects', lang)
---

<header>
  <div id="grey-overlay" data-visible="false"></div>
  <div class="container">
    <div class="header__inner-container">
      <a href={getRelativeLocaleUrl(lang, '/')}>
        <Image class="logo-lightmode" src={LogoLight} alt="logo" height={40} loading="eager" />
        <Image class="logo-darkmode" src={LogoDark} alt="logo" height={40} loading="eager" />
      </a>
      <nav id="primary-nav">
        <ul class="primary-nav__list">
          <NavItem href={getRelativeLocaleUrl(lang, '/')} label={t('nav.home')} />
          <NavItem href={getRelativeLocaleUrl(lang, '/about')} label={t('nav.about')} />
          <NavItem href={getRelativeLocaleUrl(lang, '/blog')} label={t('nav.blog')} />
          <NavItem
            href={getRelativeLocaleUrl(lang, '/projects')}
            label={t('nav.projects')}
            submenu={projects
              .sort((a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf())
              .map((project) => {
                const [lang, ...slug] = project.id.split('/')
                return {
                  label: project.data.title,
                  href: getRelativeLocaleUrl(lang, `/projects/${slug.join('/')}`),
                }
              })}
          />

          <NavItem
            href={getRelativeLocaleUrl(lang, '/contact')}
            label={t('nav.contact')}
            isButton
          />
        </ul>
        <div class="primary-nav__options">
          <LanguageSelect />
          <ThemeSelect />
        </div>
      </nav>
      <NavToggle />
    </div>
  </div>
</header>

<style>
  header {
    z-index: 999;
    position: fixed;
    top: 0;
    width: 100%;
    color: var(--clr-text);
    background-color: hsl(from var(--clr-bg) h s l / 0.75);
    backdrop-filter: blur(6px);
    border-bottom: 1px solid var(--clr-border);
  }

  .header__inner-container {
    height: 4rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  #primary-nav {
    display: flex;
    align-items: center;
  }

  .primary-nav__list {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .primary-nav__options {
    margin-left: 1rem;
    padding-left: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    border-left: 1px solid var(--clr-border);
  }

  @media screen and (max-width: 960px) {
    #primary-nav {
      position: fixed;
      z-index: 999;
      top: 0;
      right: -16rem;
      width: 16rem;
      height: 100svh;
      padding: 0 1rem;
      flex-direction: column;
      align-items: stretch;
      background-color: var(--clr-bg);
      border-left: 1px solid var(--clr-border);
      transition: transform 350ms ease-out;
    }

    #primary-nav[data-visible='false'] {
      transform: translateX(0%);
    }

    #primary-nav[data-visible='true'] {
      transform: translateX(-100%);
    }

    .primary-nav__list {
      margin-top: 5rem;
      flex-direction: column;
      align-items: stretch;
    }

    .primary-nav__options {
      flex-direction: column;
      align-items: stretch;
      margin-left: 0;
      margin-top: 1rem;
      padding-left: 0;
      padding-top: 1rem;
      border-left: none;
      border-top: 1px solid var(--clr-border);
    }

    #grey-overlay[data-visible='true'] {
      z-index: 999;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100svh;
      background-color: rgba(0, 0, 0, 0.25);
    }
  }
</style>
