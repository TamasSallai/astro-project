---
import type { MarkdownHeading } from 'astro'
import type { ITOCHeading } from '@custom-types/types'
import TOCHeading from './TOCHeading.astro'

interface Props {
  headings: MarkdownHeading[]
}

const { headings } = Astro.props

const buildTOCHierarchy = (headings: MarkdownHeading[]): ITOCHeading[] => {
  const toc: ITOCHeading[] = []
  const parentHeadings = new Map()

  headings.forEach((h) => {
    const heading = { ...h, subheadings: [] }
    parentHeadings.set(h.depth, heading)
    if (h.depth === 2) {
      toc.push(heading)
    } else {
      parentHeadings.get(heading.depth - 1).subheadings.push(heading)
    }
  })
  return toc
}

const toc = buildTOCHierarchy(headings)
---

<nav class="toc">
  <h3 class="heading-4">Table of Content</h3>
  <ul class="toc__list">
    {toc.map((heading) => <TOCHeading heading={heading} />)}
  </ul>
</nav>

<style>
  .toc {
    padding: 1.4rem;
    background-color: var(--clr-neutral-200);
    border: 1px solid var(--clr-border);
    border-radius: var(--rounded-sm);
    box-shadow:
      0 10px 15px -3px rgb(0 0 0 / 0.1),
      0 4px 6px -4px rgb(0 0 0 / 0.1);
  }

  :global([data-theme='dark']) .toc {
    background-color: var(--clr-neutral-950);
  }

  .toc__list {
    margin-top: 1.2rem;
  }
</style>
