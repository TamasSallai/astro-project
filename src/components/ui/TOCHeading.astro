---
import type { ITOCHeading } from '@custom-types/types'

interface Props {
  heading: ITOCHeading
}

const { heading } = Astro.props
---

<li class="toc-heading">
  <a class="toc-heading__link" href=`#${heading.slug}`>{heading.text}</a>
  {
    heading.subheadings.length > 0 && (
      <ul class="toc-heading__subheadings">
        {heading.subheadings.map((subheading) => (
          <Astro.self heading={subheading} />
        ))}
      </ul>
    )
  }
</li>

<style>
  .toc-heading {
    margin-top: 0.5rem;
  }

  .toc-heading__subheadings {
    padding-left: 1.2rem;
  }

  .toc-heading__link {
    position: relative;
    font-weight: 600;
    color: hsl(from var(--clr-text) h s l / 0.75);
  }

  .toc-heading__link:hover,
  .toc-heading__link:focus,
  .toc-heading__link.active {
    color: var(--clr-neutral-900);
  }

  :global([data-theme='dark']) .toc-heading__link:hover,
  :global([data-theme='dark']) .toc-heading__link:focus,
  :global([data-theme='dark']) .toc-heading__link.active {
    color: var(--clr-neutral-200);
  }

  .toc-heading__link:before {
    content: '';
    position: absolute;
    top: calc(50% - 0.5rem);
    left: -0.6rem;
    opacity: 0;
    width: 3px;
    height: 1rem;
    background-color: var(--clr-primary-500);
  }

  .toc-heading__link:hover:before,
  .toc-heading__link:focus:before,
  .toc-heading__link.active:before {
    opacity: 1;
  }
</style>
